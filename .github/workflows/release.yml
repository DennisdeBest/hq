name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with: { go-version: '1.23' }

      - name: Run tests
        run: go test -v ./...

  build:
    name: Build binaries
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:   [linux, darwin, windows]
        arch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with: { go-version: '1.23' }

      - name: Build
        id: build
        shell: bash
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          OUT="hq-${{ matrix.os }}-${{ matrix.arch }}-${VERSION}"
          [[ ${{ matrix.os }} == windows ]] && OUT+=".exe"

          echo "building $OUT"

          GOOS=${{ matrix.os }} \
          GOARCH=${{ matrix.arch }} \
          CGO_ENABLED=0 \
          go build \
            -trimpath \
            -ldflags="-s -w -X main.version=$VERSION -X main.commit=$GITHUB_SHA" \
            -o "$OUT" .

          echo "out=$OUT" >>"$GITHUB_OUTPUT"

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: ${{ steps.build.outputs.out }}
          if-no-files-found: error

  release:
    name: Create GitHub release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download all build artefacts
        uses: actions/download-artifact@v4
        with: { path: artifacts }

      - name: Publish tag release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          draft: false
          prerelease: false
          files: artifacts/**/*
